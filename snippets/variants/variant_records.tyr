enum ShapeKind {
    Circle,
    Square,
    Rectangle,
}

record Color {
    r: u8,
    g: u8,
    b: u8,
    a: u8,
}

record Shape {
    color: Color,
    case kind: ShapeKind {
        Circle { radius: f32 },
        Square { side_length: f32 },
        Rectangle { width: f32, height: f32 },
    }
}

function area(s: Shape): f32 {
    return switch s.kind {
        case Circle { radius }: 3.14 * radius * radius,
        case Square { side_length }: side_length * side_length,
        case Rectangle { width, height }: width * height,
    };
}

function total_area(shapes: []Shape): f32 {
    var total: f32 = 0;
    
    for shape in shapes {
        total += area(shape);
    }

    total
}

function main() {
    var red = Color { r: 255, g: 0, b: 0, a: 255 };
    var green = Color { r: 0, g: 255, b: 0, a: 255 };
    
    var circle = Shape { color: red, kind: Circle { radius: 2.5 } };
    var square = Shape { color: green, kind: Square { side_length: 4.0 } };
    var rectangle = Shape { color: red, kind: Rectangle { width: 3.0, height: 5.0 } };

    var shapes = [3]Shape { circle, square, rectangle };

    var total = total_area(shapes);
    println("Total Area: ", total);
}
